version: '3.8'
services:

# router PEP PDP
  router:
    image: ubuntu:v8
    container_name: router
    hostname: router
    volumes:
      - type: bind
        source: /home/user/Desktop/project/ip/
        target: /tmp/
    networks:
      net_r:
        ipv4_address: 10.0.0.2
    tty: true
    stdin_open: true
    privileged: true
    command: >
      sh -c 'arp -s 10.0.0.3 02:42:0a:00:00:03 &&
             arp -s 10.0.0.10 02:42:0a:00:00:0a &&
             iptables -t nat -A PREROUTING -j DNAT --to-destination 10.0.0.10 &&
             iptables -t nat -A POSTROUTING -j MASQUERADE &&
             /bin/bash'

  pep:
    image: ubuntu:v8
    container_name: pep
    hostname: pep
    volumes:
      - type: bind
        source: /home/user/Desktop/project/ip/
        target: /tmp/
    networks:
      net_r:
        ipv4_address: 10.0.0.10
    links:
      - router
    tty: true
    stdin_open: true
    privileged: true
    command: >
      sh -c 'ip r del default &&
             ip r add default via 10.0.0.2 &&
             arp -s 10.0.0.2 02:42:0a:00:00:02 &&
             arp -s 10.0.0.11 02:42:0a:00:00:0b &&
             iptables -t nat -A PREROUTING -j DNAT --to-destination 10.0.0.11 &&
             iptables -t nat -A POSTROUTING -j MASQUERADE &&
             /bin/bash'

  pdp:
    image: ubuntu:v8
    container_name: pdp
    hostname: pdp
    volumes:
      - type: bind
        source: /home/user/Desktop/project/ip/
        target: /tmp/
    networks:
      net_r:
        ipv4_address: 10.0.0.11
    links:
      - pep
    tty: true
    stdin_open: true
    privileged: true
    command: >
      sh -c 'ip r del default &&
             ip r add default via 10.0.0.10 &&
             arp -s 10.0.0.10 02:42:0a:00:00:0a &&
             /bin/bash'

# switch1 and pc
  switch1:
    image: ubuntu:v8
    container_name: switch1
    hostname: switch1
    volumes:
      - type: bind
        source: /home/user/Desktop/project/ip/
        target: /tmp/
    networks:
      net_r:
        ipv4_address: 10.0.0.3
      net_s1:
        ipv4_address: 192.168.1.3
    links:
      - router
    tty: true
    stdin_open: true
    privileged: true
    command: >
      sh -c 'ip r del default &&
             ip r add default via 10.0.0.2 &&
             arp -s 10.0.0.2 02:42:0a:00:00:02 &&
             arp -s 192.168.1.4 02:42:c0:a8:01:04 &&
             arp -s 192.168.1.5 02:42:c0:a8:01:05 &&
             iptables -t nat -A PREROUTING -s 192.168.1.0/24 -j DNAT --to-destination 10.0.0.2 &&
             iptables -t nat -A POSTROUTING -j MASQUERADE &&
             /bin/bash'

  switch1_pc1:
    image: ubuntu:v8
    container_name: switch1_pc1
    hostname: switch1_pc1
    volumes:
      - type: bind
        source: /home/user/Desktop/project/ip/  
        target: /tmp/
    networks:
      net_s1:
        ipv4_address: 192.168.1.4
    links:
      - switch1
    tty: true
    stdin_open: true
    privileged: true
    command: >
      sh -c 'arp -s 192.168.1.3 02:42:c0:a8:01:03 &&
             ip r del default &&
             ip r add default via 192.168.1.3 &&
             ip r del 192.168.1.0/24 &&
             /bin/bash'

  switch1_pc2:
    image: ubuntu:v8
    container_name: switch1_pc2
    hostname: switch1_pc2
    volumes:
      - type: bind
        source: /home/user/Desktop/project/ip/
        target: /tmp/
    networks:
      net_s1:
        ipv4_address: 192.168.1.5
    links:
      - switch1
    tty: true
    stdin_open: true
    privileged: true
    command: >
      sh -c 'arp -s 192.168.1.3 02:42:c0:a8:01:03 &&
             ip r del default &&
             ip r add default via 192.168.1.3 &&
             ip r del 192.168.1.0/24 &&
             /bin/bash'

# switch2 and pc
  switch2:
    image: ubuntu:v8
    container_name: switch2
    hostname: switch2
    volumes:
      - type: bind
        source: /home/user/Desktop/project/ip/
        target: /tmp/
    networks:
      net_s2:
        ipv4_address: 192.168.2.3
    links:
      - router
    tty: true
    stdin_open: true
    privileged: true
    command: >
      sh -c 'ip r del default &&
             ip r add default via 10.0.0.2 &&
             arp -s 10.0.0.2 02:42:0a:00:00:02 &&
             arp -s 192.168.2.4 02:42:c0:a8:02:04 &&
             arp -s 192.168.2.5 02:42:c0:a8:02:05 &&
             iptables -t nat -A PREROUTING -s 192.168.2.0/24 -j DNAT --to-destination 10.0.0.2 &&
             iptables -t nat -A POSTROUTING -j MASQUERADE &&
             /bin/bash'

  switch2_pc1:
    image: ubuntu:v8
    container_name: switch2_pc1
    hostname: switch2_pc1
    volumes:
      - type: bind
        source: /home/user/Desktop/project/ip/
        target: /tmp/
    networks:
      net_s2:
        ipv4_address: 192.168.2.4
    links:
      - switch2
    tty: true
    stdin_open: true
    privileged: true
    command: >
      sh -c 'arp -s 192.168.2.3 02:42:c0:a8:02:03 &&
             ip r del default &&
             ip r add default via 192.168.2.3 &&
             ip r del 192.168.2.0/24 &&
             /bin/bash'

  switch2_pc2:
    image: ubuntu:v8
    container_name: switch2_pc2
    hostname: switch2_pc2
    volumes:
      - type: bind
        source: /home/user/Desktop/project/ip/
        target: /tmp/
    networks:
      net_s2:
        ipv4_address: 192.168.2.5
    links:
      - switch2
    tty: true
    stdin_open: true
    privileged: true
    command: >
      sh -c 'arp -s 192.168.2.3 02:42:c0:a8:02:03 &&
             ip r del default &&
             ip r add default via 192.168.2.3 &&
             ip r del 192.168.2.0/24 &&
             /bin/bash'

# switch3 and pc
  switch3:
    image: ubuntu:v8
    container_name: switch3
    hostname: switch3
    volumes:
      - type: bind
        source: /home/user/Desktop/project/ip/
        target: /tmp/
    networks:
      net_s3:
        ipv4_address: 192.168.3.3
    links:
      - router
    tty: true
    stdin_open: true
    privileged: true
    command: >
      sh -c 'ip r del default &&
             ip r add default via 10.0.0.2 &&
             arp -s 10.0.0.2 02:42:0a:00:00:02 &&
             arp -s 192.168.3.4 02:42:c0:a8:03:04 &&
             arp -s 192.168.3.5 02:42:c0:a8:03:05 &&
             iptables -t nat -A PREROUTING -s 192.168.3.0/24 -j DNAT --to-destination 10.0.0.2 &&
             iptables -t nat -A POSTROUTING -j MASQUERADE &&
             /bin/bash'

  switch3_pc1:
    image: ubuntu:v8
    container_name: switch3_pc1
    hostname: switch3_pc1
    volumes:
      - type: bind
        source: /home/user/Desktop/project/ip/
        target: /tmp/
    networks:
      net_s3:
        ipv4_address: 192.168.3.4
    links:
      - switch3
    tty: true
    stdin_open: true
    privileged: true
    command: >
      sh -c 'arp -s 192.168.3.3 02:42:c0:a8:03:03 &&
             ip r del default &&
             ip r add default via 192.168.3.3 &&
             ip r del 192.168.3.0/24 &&
             /bin/bash'

  switch3_pc2:
    image: ubuntu:v8
    container_name: switch3_pc2
    hostname: switch3_pc2
    volumes:
      - type: bind
        source: /home/user/Desktop/project/ip/
        target: /tmp/
    networks:
      net_s3:
        ipv4_address: 192.168.3.5
    links:
      - switch3
    tty: true
    stdin_open: true
    privileged: true
    command: >
      sh -c 'arp -s 192.168.3.3 02:42:c0:a8:03:03 &&
             ip r del default &&
             ip r add default via 192.168.3.3 &&
             ip r del 192.168.3.0/24 &&
             /bin/bash'

# network set
networks:
  net_r:
    driver: bridge
    name: net_r
    ipam:
      driver: default
      config:
        - subnet: 10.0.0.0/24
  net_s1:
    driver: bridge
    name: net_s1
    ipam:
      driver: default
      config:
        - subnet: 192.168.1.0/24
  net_s2:
    driver: bridge
    name: net_s2
    ipam:
      driver: default
      config:
        - subnet: 192.168.2.0/24
  net_s3:
    driver: bridge
    name: net_s3
    ipam:
      driver: default
      config:
        - subnet: 192.168.3.0/24
  
